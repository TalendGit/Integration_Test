package routines;

import java.net.URL;
import javax.xml.namespace.QName;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;

public class Marketo {

		private static final char[] DIGITS_LOWER = 
		{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};
	
		public static String requestTimestamp(){
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");
            String text = df.format(new Date());
            String requestTimestamp = text.substring(0, 22) + ":" + text.substring(22);  
            return requestTimestamp;
		}
		
	
		public static String requestSignature(String marketoUserId, String marketoSecretKey, String requestTimestamp) throws NoSuchAlgorithmException, InvalidKeyException{
			String returnString = null;
			
            // Create Signature       
            String encryptString = requestTimestamp + marketoUserId ;

            SecretKeySpec secretKey = new SecretKeySpec(marketoSecretKey.getBytes(), "HmacSHA1");
            Mac mac = Mac.getInstance("HmacSHA1");
            mac.init(secretKey);
            byte[] rawHmac = mac.doFinal(encryptString.getBytes());
            char[] hexChars = Marketo.encodeHex(rawHmac);
            returnString = new String(hexChars);
            
            return returnString;
		}
		
		
		protected static char[] encodeHex(final byte[] data) {
			final int l = data.length;
			final char[] out = new char[l << 1];
			final char[] toDigits = DIGITS_LOWER;
			// two characters form the hex value.
			for (int i = 0, j = 0; i < l; i++) {
				out[j++] = toDigits[(0xF0 & data[i]) >>> 4];
				out[j++] = toDigits[0x0F & data[i]];
			}
			return out;
		}
}

