/**
 * StockChartStyles.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package routines;

public class StockChartStyles implements java.io.Serializable {
    private java.lang.String _value_;
    private static java.util.HashMap _table_ = new java.util.HashMap();

    // Constructor
    protected StockChartStyles(java.lang.String value) {
        _value_ = value;
        _table_.put(_value_,this);
    }

    public static final java.lang.String _Line = "Line";
    public static final java.lang.String _Candle = "Candle";
    public static final java.lang.String _Stick = "Stick";
    public static final java.lang.String _Area = "Area";
    public static final java.lang.String _Percentage = "Percentage";
    public static final java.lang.String _LinePercentage = "LinePercentage";
    public static final java.lang.String _CandlePercentage = "CandlePercentage";
    public static final java.lang.String _StickPercentage = "StickPercentage";
    public static final java.lang.String _AreaPercentage = "AreaPercentage";
    public static final StockChartStyles Line = new StockChartStyles(_Line);
    public static final StockChartStyles Candle = new StockChartStyles(_Candle);
    public static final StockChartStyles Stick = new StockChartStyles(_Stick);
    public static final StockChartStyles Area = new StockChartStyles(_Area);
    public static final StockChartStyles Percentage = new StockChartStyles(_Percentage);
    public static final StockChartStyles LinePercentage = new StockChartStyles(_LinePercentage);
    public static final StockChartStyles CandlePercentage = new StockChartStyles(_CandlePercentage);
    public static final StockChartStyles StickPercentage = new StockChartStyles(_StickPercentage);
    public static final StockChartStyles AreaPercentage = new StockChartStyles(_AreaPercentage);
    public java.lang.String getValue() { return _value_;}
    public static StockChartStyles fromValue(java.lang.String value)
          throws java.lang.IllegalArgumentException {
        StockChartStyles enumeration = (StockChartStyles)
            _table_.get(value);
        if (enumeration==null) throw new java.lang.IllegalArgumentException();
        return enumeration;
    }
    public static StockChartStyles fromString(java.lang.String value)
          throws java.lang.IllegalArgumentException {
        return fromValue(value);
    }
    public boolean equals(java.lang.Object obj) {return (obj == this);}
    public int hashCode() { return toString().hashCode();}
    public java.lang.String toString() { return _value_;}
    public java.lang.Object readResolve() throws java.io.ObjectStreamException { return fromValue(_value_);}
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new org.apache.axis.encoding.ser.EnumSerializer(
            _javaType, _xmlType);
    }
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new org.apache.axis.encoding.ser.EnumDeserializer(
            _javaType, _xmlType);
    }
    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(StockChartStyles.class);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("http://www.xignite.com/services/", "StockChartStyles"));
    }
    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

}
